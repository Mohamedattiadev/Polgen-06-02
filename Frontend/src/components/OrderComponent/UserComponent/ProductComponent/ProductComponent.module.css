/* Product Component Container */
.productComponent {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 100%;
  max-width: 700px; /* Ensure the form doesn't go beyond the red part */
  height: auto; /* Allow height to adjust based on content */
  padding: 1.5rem;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  background-color: var(--secondary-bg-color);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition:
    box-shadow 0.3s ease,
    transform 0.3s ease;
  overflow: hidden; /* Prevent overflow if content is too large */
  margin: 0 auto; /* Centering the container */
}

/* Hover effect on product component */
.productComponent:hover {
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  transform: translateY(-4px);
}

/* Header Section */
.header {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  /* gap: 0.5rem; */
  font-size: 1.2rem;
  padding-left: 10px;
  /* margin-bottom: 1rem; */
}

.title {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--primary-text-color);
  letter-spacing: 0.5px;
  text-transform: capitalize;
}

.productForm {
  display: flex;
  justify-content: center;
  align-items: center;
  /* flex-direction: column; */
  /* gap: 1rem; */
}

/* Form Group for aligning label and input next to each other */
.productComponent .formGroup {
  display: grid;
  /* grid-template-columns: 1fr 3fr; 1:3 ratio for label and input */
  flex-direction: row;
  /* align-items: center; */
  /* gap: 0.8rem; Reduced gap for closeness */
  margin-bottom: 1rem;
  width: 100%; /* Ensure form group takes full width */
}

/* Label Styling inside product component */
.productComponent .formGroup .label {
  font-size: 1rem;
  color: var(--secondary-text-color);
  font-weight: 600;
  width: 100%; /* Ensure the label takes up 40% of the width */
  text-align: right; /* Align labels to the right */
  padding-right: 10px; /* Add some space between label and input */
  transition: color 0.3s ease;
}

/* Input and Select Fields inside product component */
.productComponent select,
.productComponent input[type="text"],
.productComponent input[type="number"] {
  justify-items: center;
  align-items: center;
  border: 1px solid var(--border-color);
  padding: 0.8rem;
  margin: 0.2rem;
  border-radius: 8px;
  background-color: var(--input-bg-color);
  color: var(--primary-text-color);
  font-size: 1rem;
  width: 95%; /* Ensure input fields take 60% of the width */
  transition:
    border-color 0.3s ease,
    box-shadow 0.3s ease;
  box-sizing: border-box;
}

/* Focus state for select and input fields inside .productComponent */
.productComponent select:focus,
.productComponent input[type="text"]:focus,
.productComponent input[type="number"]:focus {
  border-color: var(--accent-color);
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
  outline: none;
}

/* Remove Button Styling */
.removeButton {
  position: absolute;
  background-color: var(--error-color);
  bottom: 10%;
  left: 50%;
  color: white;
  padding: 0.8rem !important;
  width: 250px;
  /* width: 150px; */
  border-radius: 8px;
  transition:
    background-color 0.3s ease,
    transform 0.3s ease;
  cursor: pointer;
}

.removeButton:hover {
  /* background-color: var(--error-dark-color); */
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

/* Total Price Section */
.totalPrice {
  font-size: 1rem;
  /* position: absolute; */
  /* left: 50%; */
  font-weight: bold;
  color: var(--primary-text-color);
  text-align: start;
  padding: 0.9rem;
  /* margin-top: 1rem; */
  /* background-color: var(--secondary-bg-color); */
  /* border-radius: 8px; */
}

.productComponent .formGroupUp {
  display: grid;
  grid-template-columns: 1fr 1fr; /* 1:3 ratio for label and input */
  margin-bottom: 1rem;
  width: 100%; /* Ensure form group takes full width */
}

.productComponent .formGroupDown {
  position: relative;
  display: grid;
  grid-template-columns: 1fr 1fr; /* 1:3 ratio for label and input */
  margin-bottom: 1rem;
  width: 100%; /* Ensure form group takes full width */
}

/* Button Styling */
.button {
  width: 100%;
  padding: 14px;
  background-color: var(--accent-color);
  color: white;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  transition: all 0.3s ease;
  cursor: pointer;
}

/* Button Hover Effect */
.button:hover {
  background-color: var(--hover-color);
  transform: translateY(-3px);
}

/* Button Active State */
.button:active {
  transform: translateY(0);
}

/* Media Queries for Responsive Design */

/* For tablets (768px and below) */
@media (max-width: 768px) {
  .productComponent {
    padding: 1.5rem; /* Adjust padding for mobile */
    max-width: 100%; /* Full width for mobile */
  }

  .title {
    font-size: 1.5rem; /* Adjust title size for mobile */
  }

  .label {
    font-size: 1rem; /* Adjust label font size */
  }

  select,
  input[type="text"],
  input[type="number"] {
    padding: 0.75rem; /* Adjust input padding for mobile */
    font-size: 1rem; /* Adjust font size */
  }

  .button {
    padding: 14px; /* Larger button padding for mobile */
    font-size: 1.1rem; /* Slightly larger font size for mobile */
  }

  .removeButton {
    width: 220px; /* Adjust remove button width */
    bottom: 7%; /* Position the remove button slightly higher */
  }
}

/* For larger screens (1024px and above) */
@media (min-width: 1024px) {
  .productComponent {
    max-width: 1200px; /* Max width for large screens */
    margin: 0 auto; /* Centering the component */
  }

  .title {
    font-size: 2rem; /* Larger font size for desktop */
  }

  select,
  input[type="text"],
  input[type="number"] {
    padding: 1rem; /* Larger padding for inputs on desktop */
  }

  .button {
    font-size: 1.2rem; /* Larger font size for buttons */
  }

  .removeButton {
    width: 250px; /* Full width for remove button on desktop */
    bottom: 10%; /* Standard position for remove button */
  }
}
